plugins {
  id 'com.github.johnrengelman.shadow' version '7.1.2'
  // Apply GraalVM Native Image plugin
  id 'org.graalvm.buildtools.native' version '0.9.18'
  id 'application'
}

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
  mavenLocal()
  mavenCentral()
}

application {
  mainClass = 'org.apache.beam.examples.MinimalWordCount'
}

def beamVersion = '2.43.0'


sourceSets {
  graal
}

configurations {
  graalImplementation.extendsFrom(implementation)
  nativeImageCompileOnly.extendsFrom(graalCompileOnly)

  all {
    resolutionStrategy {
      force "org.apache.beam:beam-sdks-java-core:${beamVersion}-SNAPSHOT"
      force "org.apache.beam:beam-runners-direct-java:${beamVersion}-SNAPSHOT"
    }
  }
}

dependencies {
  // main dependencies
  implementation "org.apache.beam:beam-sdks-java-core:${beamVersion}"
  implementation "org.apache.beam:beam-runners-direct-java:${beamVersion}"
  implementation "org.slf4j:slf4j-jdk14:1.7.32"

  // dependencies to build the native image
  graalCompileOnly "org.graalvm.nativeimage:svm:22.3.0"

  // use graal source set to compile native-image
  nativeImageCompileOnly sourceSets.graal.output
}

graalvmNative {
  agent {
    // Unfortunately this isn't sufficient to support dynamically generated classes in Beam.
    // Beam loads such classes into the context classloader using ClassLoadingStrategy.UsingLookup(MethodHandle).
    // Class define support will skip such classes: https://github.com/oracle/graal/issues/4248
    // enableExperimentalPredefinedClasses = true
  }
  binaries {
    main {
      buildArgs '--features=beam.dofns.PredefinedDoFnInvokerFeature'

      buildArgs '--initialize-at-run-time=' +
        'org.apache.beam.sdk.values.TupleTag,' + // uses random numbers, must be at runtime
        'org.apache.beam.sdk.transforms.JsonToRow$JsonToRowWithErrFn' // not used, triggers init of TupleTag

      buildArgs '--initialize-at-build-time=' +
        'org.apache.beam,' +
        'org.slf4j,' +
        'com.fasterxml.jackson,' +
        'org.codehaus.jackson,' +
        'org.joda.time,' +
        'org.apache.avro,' +
        'avro.shaded.com.google.common,' +
        'net.bytebuddy,' +
        'java.beans'
    }
  }
}

shadowJar {
  mergeServiceFiles() // merging service files in META-INF
}